import{_ as a,o as s,c as n,R as e}from"./chunks/framework.408c4d71.js";const D=JSON.parse('{"title":"4.微前端","description":"","frontmatter":{},"headers":[],"relativePath":"know/框架/4微前端.md","filePath":"know/框架/4微前端.md","lastUpdated":1684754627000}'),l={name:"know/框架/4微前端.md"},o=e(`<h1 id="_4-微前端" tabindex="-1">4.微前端 <a class="header-anchor" href="#_4-微前端" aria-label="Permalink to &quot;4.微前端&quot;">​</a></h1><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">主要针对于 ToB 的项目。 ToC的项目一般3-5变就没了。</span></span>
<span class="line"><span style="color:#A6ACCD;">去看看那些电信软件、银行软件，哪个不是 10 年+ 的寿命？企业软件的升级有多痛这个我就不多说了</span></span></code></pre></div><nav class="table-of-contents"><ul><li><a href="#_4-1-基础">4.1 基础</a><ul><li><a href="#_4-1-1-iframe">4.1.1 iframe</a></li></ul></li></ul></nav><h2 id="_4-1-基础" tabindex="-1">4.1 基础 <a class="header-anchor" href="#_4-1-基础" aria-label="Permalink to &quot;4.1 基础&quot;">​</a></h2><h3 id="_4-1-1-iframe" tabindex="-1">4.1.1 iframe <a class="header-anchor" href="#_4-1-1-iframe" aria-label="Permalink to &quot;4.1.1 iframe&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">为什么不用 iframe</span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#89DDFF;">--</span><span style="color:#F78C6C;">1.1</span><span style="color:#A6ACCD;"> 最大的特性就是提供了浏览器原生的硬隔离方案，不论是样式隔离、js 隔离这类问题统统都能被完美解决。但他的最大问题也在于他的隔离性无法被突破，导致应用间上下文无法被共享</span></span>
<span class="line"><span style="color:#89DDFF;">--</span><span style="color:#F78C6C;">1.2</span><span style="color:#A6ACCD;"> url 不同步</span></span>
<span class="line"><span style="color:#89DDFF;">--</span><span style="color:#F78C6C;">1.3</span><span style="color:#A6ACCD;"> UI 不同步，DOM 结构不共享</span></span>
<span class="line"><span style="color:#89DDFF;">--</span><span style="color:#F78C6C;">1.4</span><span style="color:#A6ACCD;"> 慢。每次子应用进入都是一次浏览器上下文重建、资源重新加载的过程</span></span></code></pre></div>`,6),t=[o];function p(r,c,i,_,d,C){return s(),n("div",null,t)}const m=a(l,[["render",p]]);export{D as __pageData,m as default};
