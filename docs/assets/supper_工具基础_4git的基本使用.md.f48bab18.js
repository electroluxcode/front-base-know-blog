import{_ as s,o as a,c as n,R as l}from"./chunks/framework.408c4d71.js";const h=JSON.parse('{"title":"4.git的基本使用","description":"","frontmatter":{},"headers":[],"relativePath":"supper/工具基础/4git的基本使用.md","filePath":"supper/工具基础/4git的基本使用.md","lastUpdated":1684848009000}'),p={name:"supper/工具基础/4git的基本使用.md"},o=l(`<h1 id="_4-git的基本使用" tabindex="-1">4.git的基本使用 <a class="header-anchor" href="#_4-git的基本使用" aria-label="Permalink to &quot;4.git的基本使用&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#_4-1-基础知识">4.1 基础知识</a></li><li><a href="#_4-2-基本使用-工作常用">4.2 基本使用(工作常用)</a><ul><li><a href="#从0搭建">从0搭建</a></li><li><a href="#clone别人的">clone别人的</a></li></ul></li><li><a href="#_4-3-删除仓库">4.3 删除仓库</a></li><li><a href="#_4-4-版本控制">4.4 版本控制</a></li><li><a href="#_4-5-提交树美化">4.5 提交树美化</a></li><li><a href="#_4-6-合并代码">4.6 合并代码</a></li><li><a href="#_4-7-标签管理">4.7 标签管理</a></li><li><a href="#_4-8-合并冲突">4.8 合并冲突</a></li><li><a href="#_4-9-项目常用">4.9 项目常用</a><ul><li><a href="#_4-9-1-当开发的时候主分支有新东西要合并进来">4.9.1 当开发的时候主分支有新东西要合并进来</a></li><li><a href="#_4-9-2-dev-没有-pull-到最新-然后进行开发">4.9.2 dev 没有 pull 到最新 然后进行开发</a></li></ul></li><li><a href="#_4-10-设置github-的-代理">4.10 设置github 的 代理</a><ul><li><a href="#http">http</a></li><li><a href="#设置ssh代理-终极解决方案">设置ssh代理（终极解决方案）</a></li></ul></li><li><a href="#_4-11-github-提-issue">4.11 github 提 issue</a></li><li><a href="#_4-12-git-hook">4.12 git hook</a></li><li><a href="#_4-13-cherry-pick">4.13 cherry-pick</a></li><li><a href="#常见bug">常见bug</a><ul><li><a href="#error-remote-origin-already-exists">error: remote origin already exists</a></li></ul></li><li><a href="#规范">规范</a></li></ul></nav><h2 id="_4-1-基础知识" tabindex="-1">4.1 基础知识 <a class="header-anchor" href="#_4-1-基础知识" aria-label="Permalink to &quot;4.1  基础知识&quot;">​</a></h2><p>下载去到下面下载</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">https://git-scm.com/downloads</span></span>
<span class="line"><span style="color:#A6ACCD;">git pull 拉取远程仓库</span></span>
<span class="line"><span style="color:#A6ACCD;">git add . 跟踪所有改动的文件</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit -m &quot;&quot; 提交改动到本地仓库</span></span>
<span class="line"><span style="color:#A6ACCD;">git push 推送到远程仓库</span></span>
<span class="line"><span style="color:#A6ACCD;">git checkout &lt;branch&gt; 切换分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git clone/init 初始化</span></span>
<span class="line"><span style="color:#A6ACCD;">git log 查看历史</span></span>
<span class="line"><span style="color:#A6ACCD;">git revert &lt;commit&gt; 撤销指定提交</span></span></code></pre></div><p>git中有三类文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1 被追踪的（tracked）:已经加入文档库</span></span>
<span class="line"><span style="color:#A6ACCD;">2不被追踪的(untracked):没有加入文档库</span></span>
<span class="line"><span style="color:#A6ACCD;">3忽略的(ignored):忽略那些不需要管理的文件夹或文件</span></span></code></pre></div><p>安装后指定你的邮箱和用户名</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">global user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">email </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3451613934@qq.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//指定你的 </span></span>
<span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">global user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">electrolux</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//指定你的</span></span>
<span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">global </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">l </span><span style="color:#676E95;font-style:italic;">//打印出你的config</span></span></code></pre></div><p>查看状态</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e </span><span style="color:#676E95;font-style:italic;">//查看当前git配置</span></span>
<span class="line"><span style="color:#A6ACCD;">git remote </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">v </span><span style="color:#676E95;font-style:italic;">//查看源</span></span></code></pre></div><p>当你第一次push的时候 可能会有凭证让你输入。gitee和github的凭证各不相同</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">上传的时候如果有报错的话提示账号密码错误的话，在上传的时候有一个弹窗，那个是输入你的码云的账号密码，输错了的话打开控制面板，用户，windows凭据，普通凭据里面删除码云和GitHub的账号密码再重新git上传重新弹窗再输入就好了，新手上路被坑了</span></span></code></pre></div><h2 id="_4-2-基本使用-工作常用" tabindex="-1">4.2 基本使用(工作常用) <a class="header-anchor" href="#_4-2-基本使用-工作常用" aria-label="Permalink to &quot;4.2 基本使用(工作常用)&quot;">​</a></h2><p>.gitignore 里面是不被提交的文件,格式类似于</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">node_modules/</span></span>
<span class="line"><span style="color:#A6ACCD;">public/</span></span></code></pre></div><h3 id="从0搭建" tabindex="-1">从0搭建 <a class="header-anchor" href="#从0搭建" aria-label="Permalink to &quot;从0搭建&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git clone</span></span>
<span class="line"><span style="color:#A6ACCD;">git pull </span><span style="color:#676E95;font-style:italic;">//命令的作用是:取回远程主机某个分支的更新，再与本地的指定分支合并.有冲突就解决冲突</span></span>
<span class="line"><span style="color:#A6ACCD;">git add </span><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">你的提交信息</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">git push origin master</span></span></code></pre></div><h3 id="clone别人的" tabindex="-1">clone别人的 <a class="header-anchor" href="#clone别人的" aria-label="Permalink to &quot;clone别人的&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git clone 你的git地址</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//如果leader 要你切换分支 git switch 或者git branch xx</span></span>
<span class="line"><span style="color:#A6ACCD;">git </span><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#A6ACCD;"> dev</span></span>
<span class="line"><span style="color:#A6ACCD;">git pull </span><span style="color:#676E95;font-style:italic;">//命令的作用是:取回远程主机某个分支的更新，再与本地的指定分支合并.有冲突就解决冲突</span></span>
<span class="line"><span style="color:#A6ACCD;">git add </span><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">你的提交信息</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">git push origin dev</span></span></code></pre></div><h2 id="_4-3-删除仓库" tabindex="-1">4.3 删除仓库 <a class="header-anchor" href="#_4-3-删除仓库" aria-label="Permalink to &quot;4.3 删除仓库&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git remote remove test </span><span style="color:#676E95;font-style:italic;">//删除其中一个仓库</span></span>
<span class="line"><span style="color:#A6ACCD;">git remote rm origin </span><span style="color:#676E95;font-style:italic;">//删除掉远程仓库</span></span></code></pre></div><h2 id="_4-4-版本控制" tabindex="-1">4.4 版本控制 <a class="header-anchor" href="#_4-4-版本控制" aria-label="Permalink to &quot;4.4 版本控制&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git log </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">pretty</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">format</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">%h: %s</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//加参。简洁查看推荐这种。感觉跟reflog差不多。但是各有各的好处</span></span>
<span class="line"><span style="color:#A6ACCD;">git reset </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">hard 60a1fded33ad035cc323ca5de6e3da4ffb80c8db	</span><span style="color:#676E95;font-style:italic;">//回退版本</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">git reflog	</span><span style="color:#676E95;font-style:italic;">//查看除了提交还有删除记录什么的</span></span>
<span class="line"><span style="color:#A6ACCD;">git reset </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">hard HEAD@</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">//执行这个操作就可以回退版本</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">git status	</span><span style="color:#676E95;font-style:italic;">//（看一下是不是有文件没提交）</span></span></code></pre></div><h2 id="_4-5-提交树美化" tabindex="-1">4.5 提交树美化 <a class="header-anchor" href="#_4-5-提交树美化" aria-label="Permalink to &quot;4.5 提交树美化&quot;">​</a></h2><p>建议在sourcetree这种地方看提交树</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1e8e76b2d2d8ed1fa89996b0a90eacb151422379  </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">：</span><span style="color:#F78C6C;">37</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//第一行的origin/master直接删掉就可以了</span></span>
<span class="line"><span style="color:#A6ACCD;">d14a3d1e3c5033840c78b58a5b1cae1af22e00ac </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">26</span></span>
<span class="line"><span style="color:#A6ACCD;">f52fecd7f8b665c018d6c244dd924272cfaccfbf 404图片的提交2</span></span>
<span class="line"><span style="color:#A6ACCD;">5</span><span style="color:#82AAFF;">c7d0df162896912ffcc38e6118e45b7f8b953d2</span><span style="color:#A6ACCD;"> (tag: </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">) 404的提交</span></span>
<span class="line"><span style="color:#A6ACCD;">60a1fded33ad035cc323ca5de6e3da4ffb80c8db 404图片的提交</span></span></code></pre></div><p>合并中间几个记录实操：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git log  </span><span style="color:#676E95;font-style:italic;">//查看提交记录</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//这里我们调用的是合并id的前 3    ctrl+x快速切换</span></span>
<span class="line"><span style="color:#A6ACCD;">git rebase </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">i </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">60a1fded33ad035cc323ca5de6e3da4ffb80c8db</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//这里我们进入了一个vim界面</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//esc按下之后，我们  :w 表示保存退出  :wq!表示强制保存退出   :q!强制退出不保存</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//越下面的是提交越晚的。和git log顺序相反</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//我们要合并我们就要把pick 变成 s（squash）这两个东西都可以。这段的意思是把中间两个合并到 404的提交 这里面去    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">pick 5c7d0df 404的提交</span></span>
<span class="line"><span style="color:#A6ACCD;">squash f52fecd 404图片的提交2</span></span>
<span class="line"><span style="color:#A6ACCD;">squash d14a3d1 </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">26</span></span>
<span class="line"><span style="color:#A6ACCD;">pick 1e8e76b </span><span style="color:#F78C6C;">17</span><span style="color:#A6ACCD;">：</span><span style="color:#F78C6C;">37</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//esc +  :wq保存并退出</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//接下来会弹出第二个页面, 分别展示三个commit的提交信息，我们要选中一个提交信息</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//按d 删除   我第一次不小心 没有commit信息 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//git rebase --abort恢复</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//d(drop那里)。或许这种方法更加痛快    s（squash）这个玩意就不用了</span></span></code></pre></div><h2 id="_4-6-合并代码" tabindex="-1">4.6 合并代码 <a class="header-anchor" href="#_4-6-合并代码" aria-label="Permalink to &quot;4.6 合并代码&quot;">​</a></h2><p>merge 合并别人的</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git checkout master </span><span style="color:#676E95;font-style:italic;">//切换分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git merge main</span></span></code></pre></div><h2 id="_4-7-标签管理" tabindex="-1">4.7 标签管理 <a class="header-anchor" href="#_4-7-标签管理" aria-label="Permalink to &quot;4.7 标签管理&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git tag v1</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//打标签</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">a v0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">version 0.1 released</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 1094adb </span><span style="color:#676E95;font-style:italic;">//指定标签名和说明文字和commit id</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag	</span><span style="color:#676E95;font-style:italic;">//查看所有标签</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//若是忘记打，则查找历史提交commit id ，再打上</span></span>
<span class="line"><span style="color:#A6ACCD;">git log </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">pretty</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">oneline </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">abbrev</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">commit</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag v0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;"> f52c633</span></span>
<span class="line"><span style="color:#A6ACCD;">git show v0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">//查看标签详细信息</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">d v0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//删除标签</span></span>
<span class="line"><span style="color:#A6ACCD;">git push origin v1</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//推送标签到远程</span></span>
<span class="line"><span style="color:#A6ACCD;">git push origin –tags	</span><span style="color:#676E95;font-style:italic;">//一次性推送全部本地标签</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//删除标签，（若已推送到远程，先从本地删除，从远程删除）</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">d v0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">9</span></span>
<span class="line"><span style="color:#A6ACCD;">git push </span><span style="color:#FFCB6B;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">refs</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">tags</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">v0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">9</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//打标签如下  v0.9 后面是commit id</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">d v0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">9</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag v0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;"> f52c633</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//实操</span></span>
<span class="line"><span style="color:#A6ACCD;">git add </span><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tag标签</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">d </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">a </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">提交</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag	</span><span style="color:#676E95;font-style:italic;">//查看所有标签 </span></span>
<span class="line"><span style="color:#A6ACCD;">git show </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//查看一下状态</span></span>
<span class="line"><span style="color:#A6ACCD;">git push origin </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">2</span></span></code></pre></div><h2 id="_4-8-合并冲突" tabindex="-1">4.8 合并冲突 <a class="header-anchor" href="#_4-8-合并冲突" aria-label="Permalink to &quot;4.8 合并冲突&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git pull 和 git fetch </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> git merge 但是git fetch可以看到更新情况，也就更安全</span></span></code></pre></div><p>在我们直接下载并且进行提交的时候，有时候啊会报错</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fatal: refusing to merge unrelated histories解决</span></span></code></pre></div><p>这个时候我们应该</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git pull origin master --allow-unrelated-histories</span></span></code></pre></div><p>然后冲突我们可以在冲突编辑区下面进行修改</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">左边是一开始的，右边是已经更改的</span></span>
<span class="line"><span style="color:#A6ACCD;">下面是最终提交的</span></span></code></pre></div><h2 id="_4-9-项目常用" tabindex="-1">4.9 项目常用 <a class="header-anchor" href="#_4-9-项目常用" aria-label="Permalink to &quot;4.9 项目常用&quot;">​</a></h2><h3 id="_4-9-1-当开发的时候主分支有新东西要合并进来" tabindex="-1">4.9.1 当开发的时候主分支有新东西要合并进来 <a class="header-anchor" href="#_4-9-1-当开发的时候主分支有新东西要合并进来" aria-label="Permalink to &quot;4.9.1  当开发的时候主分支有新东西要合并进来&quot;">​</a></h3><p>我当前开发的分支再zp_dev,leader的主分支在dev。主分支有新东西要合并进来</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">有问题</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">显示</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Please</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">your</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">changes</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">or</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">them</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">before</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">you</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge.然后</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 拉到现在的dev分支</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zp_dev</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pop</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 安全</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 接着本地解决冲突，accept 更改，拉取共有的东西</span></span></code></pre></div><h3 id="_4-9-2-dev-没有-pull-到最新-然后进行开发" tabindex="-1">4.9.2 dev 没有 pull 到最新 然后进行开发 <a class="header-anchor" href="#_4-9-2-dev-没有-pull-到最新-然后进行开发" aria-label="Permalink to &quot;4.9.2 dev 没有 pull  到最新 然后进行开发&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 本地的有冲突</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">或者</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zp_dev</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 解决冲突 此时 Git 会将 zp_dev 分支下最新提交的代码提取出来，将 dev 分支最新的代码应用到这个提交上，然后将结果提交到 zp_dev 分支上。如果有冲突需要解决，解决冲突后再使用 git add 命令添加修改，使用 git rebase --continue 命令继续执行合并操作。如果合并过程中发生问题导致代码出现错误，可以使用 git rebase --abort 命令撤销合并操作，并恢复到合并前的状态。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 5.当合并完成后，将合并结果推送到远程仓库：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zp_dev</span></span></code></pre></div><h2 id="_4-10-设置github-的-代理" tabindex="-1">4.10 设置github 的 代理 <a class="header-anchor" href="#_4-10-设置github-的-代理" aria-label="Permalink to &quot;4.10 设置github 的 代理&quot;">​</a></h2><h3 id="http" tabindex="-1">http <a class="header-anchor" href="#http" aria-label="Permalink to &quot;http&quot;">​</a></h3><p>v2ray 找到可以用的节点。然后 设置 =》 参数设置，然后</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http.https://github.com.proxy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">socks5://127.0.0.1:10808</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 取消 代理</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--unset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http.proxy</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--unset</span><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">http.https://github.com.proxy</span></span></code></pre></div><h3 id="设置ssh代理-终极解决方案" tabindex="-1">设置ssh代理（终极解决方案） <a class="header-anchor" href="#设置ssh代理-终极解决方案" aria-label="Permalink to &quot;设置ssh代理（终极解决方案）&quot;">​</a></h3><p>https代理存在一个局限，那就是没有办法做身份验证，每次拉取私库或者推送代码时，都需要输入github的账号和密码，非常痛苦。 设置ssh代理前，请确保你已经设置ssh key。可以参考<a href="https://link.zhihu.com/?target=https%3A//tjfish.github.io/posts/%E5%9C%A8github%E4%B8%8A%E6%B7%BB%E5%8A%A0SSH-key/" target="_blank" rel="noreferrer">在 github 上添加 SSH key</a> 完成设置 更进一步是设置ssh代理。只需要配置一个config就可以了。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Linux、MacOS</span></span>
<span class="line"><span style="color:#FFCB6B;">vi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/.ssh/config</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Windows </span></span>
<span class="line"><span style="color:#FFCB6B;">到C:\\Users\\your_user_name\\.ssh目录下，新建一个config文件（无后缀名）</span></span></code></pre></div><p>将下面内容加到config文件中即可</p><p>对于windows用户，代理会用到connect.exe，你如果安装了Git都会自带connect.exe，如我的路径为C:\\APP\\Git\\mingw64\\bin\\connect</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">#Windows用户，注意替换你的端口号和connect.exe的路径</span></span>
<span class="line"><span style="color:#A6ACCD;">ProxyCommand &quot;C:\\APP\\Git\\mingw64\\bin\\connect&quot; -S 127.0.0.1:51837 -a none %h %p</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">#MacOS用户用下方这条命令，注意替换你的端口号</span></span>
<span class="line"><span style="color:#A6ACCD;">#ProxyCommand nc -v -x 127.0.0.1:51837 %h %p</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Host github.com</span></span>
<span class="line"><span style="color:#A6ACCD;">  User git</span></span>
<span class="line"><span style="color:#A6ACCD;">  Port 22</span></span>
<span class="line"><span style="color:#A6ACCD;">  Hostname github.com</span></span>
<span class="line"><span style="color:#A6ACCD;">  # 注意修改路径为你的路径</span></span>
<span class="line"><span style="color:#A6ACCD;">  IdentityFile &quot;C:\\Users\\Your_User_Name\\.ssh\\id_rsa&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  TCPKeepAlive yes</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Host ssh.github.com</span></span>
<span class="line"><span style="color:#A6ACCD;">  User git</span></span>
<span class="line"><span style="color:#A6ACCD;">  Port 443</span></span>
<span class="line"><span style="color:#A6ACCD;">  Hostname ssh.github.com</span></span>
<span class="line"><span style="color:#A6ACCD;">  # 注意修改路径为你的路径</span></span>
<span class="line"><span style="color:#A6ACCD;">  IdentityFile &quot;C:\\Users\\Your_User_Name\\.ssh\\id_rsa&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  TCPKeepAlive yes</span></span></code></pre></div><p>保存后文件后测试方法如下，返回successful之类的就成功了。</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 测试是否设置成功</span></span>
<span class="line"><span style="color:#A6ACCD;">ssh -T git@github.com</span></span></code></pre></div><h2 id="_4-11-github-提-issue" tabindex="-1">4.11 github 提 issue <a class="header-anchor" href="#_4-11-github-提-issue" aria-label="Permalink to &quot;4.11 github 提 issue&quot;">​</a></h2><p>首先 fork 一下，然后 git clone fork 的 仓库。然后 切换分支 提交 分支到自己的地方 。就可以去他的项目提 pr了</p><h2 id="_4-12-git-hook" tabindex="-1">4.12 git hook <a class="header-anchor" href="#_4-12-git-hook" aria-label="Permalink to &quot;4.12 git hook&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">githook是原理是</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">git文件夹里面有hooks里面有很多hook，我们只需要写bash脚本，特定的时间就会做特定的事情</span></span>
<span class="line"><span style="color:#A6ACCD;">husty会自定义目录执行特定时间脚本（主要是precommit)</span></span></code></pre></div><h2 id="_4-13-cherry-pick" tabindex="-1">4.13 cherry-pick <a class="header-anchor" href="#_4-13-cherry-pick" aria-label="Permalink to &quot;4.13 cherry-pick&quot;">​</a></h2><p>把指定的<a href="https://so.csdn.net/so/search?q=commit&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">commit</a>，拉到一个当前的分支上。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git cherry</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">pick commitID</span></span></code></pre></div><h2 id="常见bug" tabindex="-1">常见bug <a class="header-anchor" href="#常见bug" aria-label="Permalink to &quot;常见bug&quot;">​</a></h2><h3 id="error-remote-origin-already-exists" tabindex="-1">error: remote origin already exists <a class="header-anchor" href="#error-remote-origin-already-exists" aria-label="Permalink to &quot;error: remote origin already exists&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">如果你clone下来一个别人的仓库，在此基础上完成你的代码，推送到自己的仓库可能遇到这问题。</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> remote origin already exists</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">表示远程仓库已存在。</span></span>
<span class="line"><span style="color:#A6ACCD;">因此你要进行以下操作：</span></span>
<span class="line"><span style="color:#89DDFF;">--</span><span style="color:#F78C6C;">1.1</span><span style="color:#A6ACCD;">、先输入git remote rm origin 删除关联的origin的远程库</span></span>
<span class="line"><span style="color:#89DDFF;">--</span><span style="color:#F78C6C;">1.2</span><span style="color:#A6ACCD;">、关联自己的仓库 git remote add origin </span><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//gitee.com/xxxxxx.git</span></span>
<span class="line"><span style="color:#89DDFF;">--</span><span style="color:#F78C6C;">1.3</span><span style="color:#A6ACCD;">、最后git push origin master，这样就推送到自己的仓库了。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">git克隆下来只有master分支 看不见 也无法切换 其他分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git branch </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">a</span></span>
<span class="line"><span style="color:#A6ACCD;">git checkout </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">t origin</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">website_shibo_1</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">0.0</span><span style="color:#A6ACCD;"> 就可以了</span></span></code></pre></div><h2 id="规范" tabindex="-1">规范 <a class="header-anchor" href="#规范" aria-label="Permalink to &quot;规范&quot;">​</a></h2><p>目前行业最为广泛规范是 Conventional Commits[1] 很多项目包括 Auglar 也在使用。</p><p>可以根据以上规范制定适合自己团队的规范，例如：</p><p>JIRA-1234 feat: support for async execution</p><p>^-------^ ^--^: ^-------------------------^ | | | | | +--&gt; Summary in present tense. | | | +--&gt; Type: feat, fix, docs, style, refactor, perf, test or chore. | +--&gt; Jira ticket number</p><p>Type 类型必须是下面之一，并且为小写:</p><pre><code>feat: 修改/增加新功能
fix: 修改bug的变更
docs: 文档相关变更
style: 不影响代码含义的变更(空白、格式、缺少符号等)
refactor: 代码重构变更
perf: 改进性能的变更
test: 添加/修改现有的测试
chore: Build, .gitignore或辅助工具、库(如文档生成)等变更
</code></pre>`,78),e=[o];function t(c,r,i,C,y,A){return a(),n("div",null,e)}const g=s(p,[["render",t]]);export{h as __pageData,g as default};
